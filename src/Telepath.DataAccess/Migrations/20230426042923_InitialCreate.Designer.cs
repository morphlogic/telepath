// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Morphware.Telepath.DataAccess;

#nullable disable

namespace Morphware.Telepath.DataAccess.Migrations
{
    [DbContext(typeof(TelepathContext))]
    [Migration("20230426042923_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MemberThinkGroup", b =>
                {
                    b.Property<int>("MembersMemberId")
                        .HasColumnType("int");

                    b.Property<int>("ThinkGroupsThinkGroupId")
                        .HasColumnType("int");

                    b.HasKey("MembersMemberId", "ThinkGroupsThinkGroupId");

                    b.HasIndex("ThinkGroupsThinkGroupId");

                    b.ToTable("MemberThinkGroup");
                });

            modelBuilder.Entity("Morphware.Telepath.Core.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Morphware.Telepath.Core.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("ThinkGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Morphware.Telepath.Core.ThinkGroup", b =>
                {
                    b.Property<int>("ThinkGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThinkGroupId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ThinkGroupId");

                    b.ToTable("ThinkGroups");
                });

            modelBuilder.Entity("Morphware.Telepath.Core.Thought", b =>
                {
                    b.Property<int>("ThoughtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThoughtId"));

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Occurred")
                        .HasColumnType("datetime2");

                    b.Property<int>("ThinkGroupId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("ThoughtId");

                    b.HasIndex("MemberId");

                    b.HasIndex("ThinkGroupId");

                    b.HasIndex("TopicId");

                    b.ToTable("Thoughts");
                });

            modelBuilder.Entity("Morphware.Telepath.Core.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopicId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("ReportThought", b =>
                {
                    b.Property<int>("ReportsReportId")
                        .HasColumnType("int");

                    b.Property<int>("ThoughtsThoughtId")
                        .HasColumnType("int");

                    b.HasKey("ReportsReportId", "ThoughtsThoughtId");

                    b.HasIndex("ThoughtsThoughtId");

                    b.ToTable("ReportThought");
                });

            modelBuilder.Entity("MemberThinkGroup", b =>
                {
                    b.HasOne("Morphware.Telepath.Core.Member", null)
                        .WithMany()
                        .HasForeignKey("MembersMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Morphware.Telepath.Core.ThinkGroup", null)
                        .WithMany()
                        .HasForeignKey("ThinkGroupsThinkGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Morphware.Telepath.Core.Thought", b =>
                {
                    b.HasOne("Morphware.Telepath.Core.Member", null)
                        .WithMany("Thoughts")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Morphware.Telepath.Core.ThinkGroup", null)
                        .WithMany("Thoughts")
                        .HasForeignKey("ThinkGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Morphware.Telepath.Core.Topic", "Topic")
                        .WithMany("Thoughts")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("ReportThought", b =>
                {
                    b.HasOne("Morphware.Telepath.Core.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportsReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Morphware.Telepath.Core.Thought", null)
                        .WithMany()
                        .HasForeignKey("ThoughtsThoughtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Morphware.Telepath.Core.Member", b =>
                {
                    b.Navigation("Thoughts");
                });

            modelBuilder.Entity("Morphware.Telepath.Core.ThinkGroup", b =>
                {
                    b.Navigation("Thoughts");
                });

            modelBuilder.Entity("Morphware.Telepath.Core.Topic", b =>
                {
                    b.Navigation("Thoughts");
                });
#pragma warning restore 612, 618
        }
    }
}
